RING_REFRESH_TOKEN='<get this by running `npx -p ring-client-api ring-auth-cli`>'
APP_RECORDING_FOLDER='.<wherever you want it to be>'
APP_SNAPSHOT_TIME_SEC='1<when in the recording would the snapshot be taken - in seconds>'
APP_SERVER_PORT='3600<this app does not need to be a server, though sometimes it helps to expose health endpoint>'
APP_AUTO_STOP_MS='<set this if you want the app to stop automatically after a while. Very useful if it is hosted as a service which will automatically restart>'
APP_ENABLE_AI='<set to true only if ollama with vision is installed>'
APP_AI_OLLAMA_MODEL='<llama3.2-vision|llava:7b>'
APP_AI_TYPE='<together-ai|ollama|gemini>'
APP_AI_TOGETHER_API_KEY='<together ai api key>'
APP_AI_TOGETHER_MODEL='<together ai model you want to use. E.g. meta-llama/Llama-Vision-Free>'
APP_AI_GEMINI_API_KEY='<provide with your api key from google cloud console>'
APP_AI_GEMINI_MODEL='<gemini-1.5-flash | gemini-2.0-flash-exp or others>'
APP_AI_USER_PROMPT='<Prompt for the snapshot description. You can use %cameraName% as a variable>'
SLACK_BOT_TOKEN='<create a slack app to get this. make sure you invide the app to the cannel and give it proper permission>'
SLACK_CHANNEL_ID='<create a slack channel and get its id>'
MEGA_EMAIL='<create a mega.io account and provide with the email here>'
MEGA_PASSWORD='<create a mega.io account and provide with the password here>'
MONGO_DB_CONNECTION_STRING='<create a free mongo db using mongo atlas. e.g.: mongodb+srv://admin:<password>@freecluster.2mwhkfg.mongodb.net/?retryWrites=true&w=majority&appName=FreeCluster>'
MONGO_DB_NAME='ringnotifier'
MONGO_DB_COLLECTION='configuration'